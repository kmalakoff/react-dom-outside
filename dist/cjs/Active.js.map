{"version":3,"sources":["Active.ts"],"sourcesContent":["import { Children, Fragment, cloneElement, createElement, isValidElement, useRef, useState } from 'react';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useEvent } from 'react-dom-event';\n\nexport default function Active({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n  const ref = useRef<HTMLElement>(null);\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      if (ref.current && ref.current.contains(event.target)) return;\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n"],"names":["Active","children","state","useState","isActive","setIsActive","ref","useRef","useEvent","event","current","contains","target","createElement","Fragment","Children","map","child","isValidElement","cloneElement"],"mappings":";;;;+BAIA;;;eAAwBA;;;qBAJ0E;6BAEzE;AAEV,SAASA,OAAO,KAAY;QAAZ,AAAEC,WAAF,MAAEA;IAC/B,IAAMC,QAAQC,IAAAA,eAAQ,EAAU;IAChC,IAAMC,WAAWF,KAAK,CAAC,EAAE;IACzB,IAAMG,cAAcH,KAAK,CAAC,EAAE;IAC5B,IAAMI,MAAMC,IAAAA,aAAM,EAAc;IAChCC,IAAAA,uBAAQ,EACN,SAACC;QACC,IAAI,CAACL,UAAU;QACf,IAAIE,IAAII,OAAO,IAAIJ,IAAII,OAAO,CAACC,QAAQ,CAACF,MAAMG,MAAM,GAAG;QACvDP,YAAY;IACd,GACA;QAACD;QAAUC;KAAY;IAGzB,OAAOQ,IAAAA,oBAAa,EAClBC,eAAQ,EACR,MACAC,eAAQ,CAACC,GAAG,CAAuBf,UAAU,SAACgB;eAC5CC,IAAAA,qBAAc,EAACD,SAEXE,IAAAA,mBAAY,EAACF,OAA4B;YACvCb,UAAAA;YACAC,aAAAA;YACAC,KAAAA;QACF,KACAW;;AAGV"}