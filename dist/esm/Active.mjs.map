{"version":3,"sources":["Active.ts"],"sourcesContent":["import { Children, Fragment, cloneElement, createElement, isValidElement, useRef, useState } from 'react';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useEvent } from 'react-dom-event';\n\nexport default function Active({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n  const ref = useRef<HTMLElement>(null);\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      if (ref.current && ref.current.contains(event.target)) return;\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n"],"names":["Children","Fragment","cloneElement","createElement","isValidElement","useRef","useState","useEvent","Active","children","state","isActive","setIsActive","ref","event","current","contains","target","map","child"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,QAAQ;AAE1G,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,eAAe,SAASC,OAAO,EAAEC,QAAQ,EAAE;IACzC,MAAMC,QAAQJ,SAAkB;IAChC,MAAMK,WAAWD,KAAK,CAAC,EAAE;IACzB,MAAME,cAAcF,KAAK,CAAC,EAAE;IAC5B,MAAMG,MAAMR,OAAoB;IAChCE,SACE,CAACO;QACC,IAAI,CAACH,UAAU;QACf,IAAIE,IAAIE,OAAO,IAAIF,IAAIE,OAAO,CAACC,QAAQ,CAACF,MAAMG,MAAM,GAAG;QACvDL,YAAY;IACd,GACA;QAACD;QAAUC;KAAY;IAGzB,OAAOT,cACLF,UACA,MACAD,SAASkB,GAAG,CAAuBT,UAAU,CAACU,QAC5Cf,eAAee,SAEXjB,aAAaiB,OAA4B;YACvCR;YACAC;YACAC;QACF,KACAM;AAGV"}