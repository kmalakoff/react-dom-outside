{
  "name": "react-dom-outside",
  "version": "0.1.3",
  "description": "React components for react-dom and react-native-web click outside",
  "keywords": [
    "react",
    "web",
    "react-dom",
    "dom",
    "contains",
    "outside",
    "universal",
    "typescript"
  ],
  "repository": "kmalakoff/react-dom-outside",
  "license": "MIT",
  "author": "Kevin Malakoff <kmalakoff@gmail.com> (https://github.com/kmalakoff)",
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/esm/index.mjs",
      "require": "./dist/cjs/index.js",
      "types": "./dist/types/index.d.ts"
    },
    "./*": "./*"
  },
  "main": "dist/cjs/index.js",
  "unpkg": "dist/umd/react-dom-outside.js",
  "module": "dist/esm/index.mjs",
  "types": "dist/types/index.d.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsds build",
    "deploy": "tsds deploy",
    "format": "biome check --write --unsafe src/ test/",
    "test": "tsds test:node && tsds test:browser --config wtr.config.mjs",
    "test:engines": "nvu engines tsds test:node && tsds test:browser --config wtr.config.mjs",
    "version": "tsds version"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.10.2",
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.1",
    "@web/dev-server-import-maps": "^0.2.1",
    "jsdom": "^25.0.1",
    "mocha": "^11.0.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-dom-event": "^0.1.4",
    "react-native-web": "^0.19.13",
    "react-ref-boundary": "^0.1.4",
    "ts-dev-stack": "^1.4.9",
    "tsds-web-test-runner": "^1.4.8"
  },
  "peerDependencies": {
    "react": "*",
    "react-dom-event": "*",
    "react-ref-boundary": "*"
  },
  "packageManager": "npm@11.0.0+sha512.11dff29565d2297c74e7c594a9762581bde969f0aa5cbe6f5b3644bf008a16c065ece61094d9ffbb81125be38df8e1ba43eb8244b3d30c61eb797e9a2440e3ec",
  "engines": {
    "node": ">=16"
  },
  "tsds": {
    "source": "src/index.ts",
    "globals": {
      "react": "React",
      "react-dom-event": "reactDomEvent",
      "react-dom-contains": "reactDomContains",
      "react-ref-boundary": "ReactRefBoundary"
    }
  }
}
